#  OpenAPI Petstore
#
# This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
#
# The version of the OpenAPI document: 1.0.0
#
# Generated by: https://openapi-generator.tech
#

require "../spec_helper"

# Unit tests for PetStore::GmFruit
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe PetStore::GmFruit do
  describe "test an instance of GmFruit" do
    it "should create an instance of GmFruit" do
      # instance = PetStore::GmFruit.new
      # expect(instance).to be_instance_of(PetStore::GmFruit)
    end
  end

  describe "#valid?" do
    context "is apple" do
      it "returns true" do
        apple = PetStore::Apple.new(cultivar: "cultivar")
        gm_fruit = PetStore::GmFruit.from_json(apple.to_json)
        (gm_fruit.valid?).should be_true
      end
    end

    context "is banana" do
      it "returns true" do
        banana = PetStore::Banana.new(length_cm: 123.45)
        gm_fruit = PetStore::GmFruit.from_json(banana.to_json)
        (gm_fruit.valid?).should be_true
      end
    end

    context "is both apple and banana" do
      it "returns true" do
        gm_fruit = PetStore::GmFruit.new(cultivar: "cultivar", length_cm: 123.45)
        json_string = gm_fruit.to_json
        banana = PetStore::Banana.from_json(json_string)
        apple = PetStore::Apple.from_json(json_string)
        (banana.valid?).should be_true
        (apple.valid?).should be_true
      end
    end

    context "is not apple or banana" do
      it "returns false" do
        gm_fruit = PetStore::GmFruit.new(color: "orange")
        json_string = gm_fruit.to_json
        expect_raises(JSON::SerializableError) do
          PetStore::Banana.from_json(json_string)
        end
        expect_raises(JSON::SerializableError) do
          PetStore::Apple.from_json(json_string)
        end
      end
    end
  end

  describe "test attribute 'color'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'cultivar'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end

  describe "test attribute 'length_cm'" do
    it "should work" do
      # assertion here. ref: https://crystal-lang.org/reference/guides/testing.html
    end
  end
end
