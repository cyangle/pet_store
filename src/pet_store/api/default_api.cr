#  OpenAPI Petstore
#
# This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
#
# The version of the OpenAPI document: 1.0.0
#
# Generated by: https://openapi-generator.tech
#

require "uri"
require "../api_client"

module PetStore
  class DefaultApi
    property api_client : ApiClient

    delegate client_side_validation, debugging, to: @api_client.config

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # @return [FooGetDefaultResponse]
    def foo_get : FooGetDefaultResponse
      data, _status_code, _headers = foo_get_with_http_info()
      data
    end

    # @return [Array<(FooGetDefaultResponse, Integer, Hash)>] FooGetDefaultResponse data, response status code and response headers
    def foo_get_with_http_info : Tuple(FooGetDefaultResponse, Int32, Hash(String, Array(String) | String))
      request = build_api_request_for_foo_get()

      body, status_code, headers = @api_client.execute_api_request(request)

      if debugging
        Log.debug { "API called: DefaultApi#foo_get\nBody: #{body.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}" }
      end

      return Tuple.new(FooGetDefaultResponse.from_json(body), status_code, headers)
    end

    # @return nil
    def foo_get(&block : Crest::Response ->) : Nil
      build_api_request_for_foo_get().execute(&block)
    end

    # @return Crest::Request
    def build_api_request_for_foo_get : Crest::Request
      if debugging
        Log.debug { "Calling API: DefaultApi.foo_get ..." }
      end

      # resource path
      local_var_path = "/foo"

      # query parameters
      query_params = Hash(String, (String | Array(String))).new

      # header parameters
      header_params = Hash(String, String).new
      # HTTP header "Accept" (if needed)
      header_params["Accept"] = @api_client.select_header_accept(["application/json"])

      # form parameters
      form_params = nil

      # http body (model)
      post_body = nil

      # auth_names
      auth_names = [] of String

      @api_client.build_api_request(
        http_method: :"GET",
        path: local_var_path,
        operation: "DefaultApi.foo_get",
        post_body: post_body,
        auth_names: auth_names,
        header_params: header_params,
        query_params: query_params,
        form_params: form_params
      )
    end
  end
end
